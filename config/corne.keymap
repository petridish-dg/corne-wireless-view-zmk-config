/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        HomeBasedAgent: HomeBasedAgent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(H) &kp O &kp M &kp E &kp SPACE &kp LS(B) &kp A &kp S &kp E &kp D &kp SPACE &kp LS(A) &kp G &kp E &kp N &kp T>;
            label = "HOMEBASEDAGENT";
        };

        agentPhone: agentPhone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT &kp SPACE &kp RIGHT &kp SPACE &kp RIGHT &kp RIGHT &kp RIGHT &kp SPACE &kp RIGHT &kp RIGHT &kp RIGHT &kp SPACE>;
            label = "AGENTPHONE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&HomeBasedAgent  &kp Q           &kp W           &kp F        &kp P             &kp G      &kp J    &kp L            &kp U        &kp Y       &kp SQT          &kp BSPC
&agentPhone      &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp D      &kp H    &mt RSHFT N      &mt LCTRL E  &mt RALT I  &mt RIGHT_GUI O  &kp SQT
&kp LGUI         &kp Z           &kp X           &kp C        &kp V             &kp B      &kp K    &kp M            &kp COMMA    &kp DOT     &kp FSLH         &kp ESC
                                                 &kp ESC      &lt 2 SPACE       &kp TAB    &kp RET  &lt 1 BACKSPACE  &kp DELETE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB     &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &kp N6       &kp N7           &kp N8    &kp N9        &kp N0     &kp DELETE
&bt BT_CLR  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans       &kp LEFT         &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&kp LSHFT   &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans       &trans           &trans    &trans        &trans     &trans
                               &kp DOT  &kp N0  &kp MINUS    &lt 3 SPACE  &lt 1 BACKSPACE  &kp RALT
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp CAPS  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)     &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp LS(LPAR)   &kp LS(RPAR)   &kp LS(UNDER)    &trans  &trans  &trans
            >;
        };
    };
};
